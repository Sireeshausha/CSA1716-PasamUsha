from collections import deque

def bfs(graph, start):
    visited = set()
    queue = deque([start])
    visited.add(start)

    while queue:
        vertex = queue.popleft()
        print(vertex, end=' ')

        for neighbor in graph[vertex]:
            if neighbor not in visited:
                queue.append(neighbor)
                visited.add(neighbor)
graph = {}
num_edges = int(input("Enter the number of edges: "))

for _ in range(num_edges):
    src, dest = input("Enter edge (source destination): ").split()
    if src not in graph:
        graph[src] = []
    if dest not in graph:
        graph[dest] = []
    graph[src].append(dest)
    graph[dest].append(src)

# Get starting vertex from the user
start_vertex = input("Enter the starting vertex: ")

print("BFS Traversal:")
bfs(graph, start_vertex)

